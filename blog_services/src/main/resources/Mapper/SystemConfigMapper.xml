<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.blog.service.mapper.SystemConfigMapper" >
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <resultMap id="BaseResultMap" type="com.zy.blog.entity.SystemConfig" >
    <result column="icon_type" property="iconType" />
    <result column="qi_niu_access_key" property="qiNiuAccessKey" jdbcType="VARCHAR" />
    <result column="qi_niu_secret_key" property="qiNiuSecretKey" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="email_user_name" property="emailUserName" jdbcType="VARCHAR" />
    <result column="email_password" property="emailPassword" jdbcType="VARCHAR" />
    <result column="smtp_address" property="smtpAddress" jdbcType="VARCHAR" />
    <result column="smtp_port" property="smtpPort" jdbcType="VARCHAR" />
    <result column="qi_niu_bucket" property="qiNiuBucket" jdbcType="VARCHAR" />
    <result column="qi_niu_area" property="qiNiuArea" jdbcType="VARCHAR" />
    <result column="upload_qi_niu" property="uploadQiNiu" jdbcType="VARCHAR" />
    <result column="upload_local" property="uploadLocal" jdbcType="VARCHAR" />
    <result column="picture_priority" property="picturePriority" jdbcType="VARCHAR" />
    <result column="qi_niu_picture_base_url" property="qiNiuPictureBaseUrl" jdbcType="VARCHAR" />
    <result column="local_picture_base_url" property="localPictureBaseUrl" jdbcType="VARCHAR" />
    <result column="start_email_notification" property="startEmailNotification" jdbcType="VARCHAR" />
    <result column="editor_model" property="editorModel" jdbcType="BIT" />
    <result column="theme_color" property="themeColor" jdbcType="VARCHAR" />
    <result column="minio_end_point" property="minioEndPoint" jdbcType="VARCHAR" />
    <result column="minio_access_key" property="minioAccessKey" jdbcType="VARCHAR" />
    <result column="minio_secret_key" property="minioSecretKey" jdbcType="VARCHAR" />
    <result column="minio_bucket" property="minioBucket" jdbcType="VARCHAR" />
    <result column="upload_minio" property="uploadMinio" jdbcType="BIT" />
    <result column="minio_picture_base_url" property="minioPictureBaseUrl" jdbcType="VARCHAR" />
    <result column="open_dashboard_notification" property="openDashboardNotification" jdbcType="BIT" />
    <result column="content_picture_priority" property="contentPicturePriority" jdbcType="BIT" />
    <result column="open_email_activate" property="openEmailActivate" jdbcType="BIT" />
  </resultMap>

  <select id="selectSystemConfig" resultMap="BaseResultMap" >
   select * from t_system_config where status='1' order by create_time desc ;
  </select>

  <update id="editSystemConfig" parameterType="map" >
    update t_system_config
    <set >
      <if test="record.iconType != null" >
        icon_type = #{record.iconType,jdbcType=BIT},
      </if>
      <if test="record.qiNiuAccessKey != null" >
        qi_niu_access_key = #{record.qiNiuAccessKey,jdbcType=VARCHAR},
      </if>
      <if test="record.qiNiuSecretKey != null" >
        qi_niu_secret_key = #{record.qiNiuSecretKey,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailUserName != null" >
        email_user_name = #{record.emailUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.emailPassword != null" >
        email_password = #{record.emailPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.smtpAddress != null" >
        smtp_address = #{record.smtpAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.smtpPort != null" >
        smtp_port = #{record.smtpPort,jdbcType=VARCHAR},
      </if>
      <if test="record.qiNiuBucket != null" >
        qi_niu_bucket = #{record.qiNiuBucket,jdbcType=VARCHAR},
      </if>
      <if test="record.qiNiuArea != null" >
        qi_niu_area = #{record.qiNiuArea,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadQiNiu != null" >
        upload_qi_niu = #{record.uploadQiNiu,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadLocal != null" >
        upload_local = #{record.uploadLocal,jdbcType=VARCHAR},
      </if>
      <if test="record.picturePriority != null" >
        picture_priority = #{record.picturePriority,jdbcType=VARCHAR},
      </if>
      <if test="record.qiNiuPictureBaseUrl != null" >
        qi_niu_picture_base_url = #{record.qiNiuPictureBaseUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.localPictureBaseUrl != null" >
        local_picture_base_url = #{record.localPictureBaseUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.startEmailNotification != null" >
        start_email_notification = #{record.startEmailNotification,jdbcType=VARCHAR},
      </if>
      <if test="record.editorModel != null" >
        editor_model = #{record.editorModel,jdbcType=BIT},
      </if>
      <if test="record.themeColor != null" >
        theme_color = #{record.themeColor,jdbcType=VARCHAR},
      </if>
      <if test="record.minioEndPoint != null" >
        minio_end_point = #{record.minioEndPoint,jdbcType=VARCHAR},
      </if>
      <if test="record.minioAccessKey != null" >
        minio_access_key = #{record.minioAccessKey,jdbcType=VARCHAR},
      </if>
      <if test="record.minioSecretKey != null" >
        minio_secret_key = #{record.minioSecretKey,jdbcType=VARCHAR},
      </if>
      <if test="record.minioBucket != null" >
        minio_bucket = #{record.minioBucket,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadMinio != null" >
        upload_minio = #{record.uploadMinio,jdbcType=BIT},
      </if>
      <if test="record.minioPictureBaseUrl != null" >
        minio_picture_base_url = #{record.minioPictureBaseUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.openDashboardNotification != null" >
        open_dashboard_notification = #{record.openDashboardNotification,jdbcType=BIT},
      </if>
      <if test="record.contentPicturePriority != null" >
        content_picture_priority = #{record.contentPicturePriority,jdbcType=BIT},
      </if>
      <if test="record.openEmailActivate != null" >
        open_email_activate = #{record.openEmailActivate,jdbcType=BIT},
      </if>
      <if test="record.dashboardNotification != null" >
        dashboard_notification = #{record.dashboardNotification,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

</mapper>